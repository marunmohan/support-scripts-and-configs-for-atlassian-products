# disable new X-FRAM-OPTIONS security header
-Dcom.atlassian.jira.clickjacking.protection.disabled=true
-Dcom.atlassian.jira.clickjacking.protection.exclude=/secure/CreateIssue!default.jspa

# set debug port
CATALINA_OPTS="-agentlib:jdwp=transport=dt_socket,address=4002,server=y,suspend=n ${CATALINA_OPTS}"

#set SSL keystore for App
-Djavax.net.ssl.trustStore="C:\Program Files\Java\jdk1.8.0_102\jre\lib\security\cacerts"

# use login recovery_admin
-Datlassian.recovery.password=<your-password>

### Encoding UTF8 START ###
-Dsun.jnu.encoding=UTF-8
-Dfile.encoding=UTF-8
-Djavax.servlet.request.encoding=UTF-8

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
### Encoding UTF8 END ###

### JMX START ###
-Dcom.sun.management.jmxremote 
-Dcom.sun.management.jmxremote.port=8099 
-Dcom.sun.management.jmxremote.rmi.port=8099 
-Dcom.sun.management.jmxremote.ssl=false 
-Djava.rmi.server.hostname=jira.example.com
-Djava.net.preferIPv4Stack=true
# default file for passwords: /opt/atlassian/jira/jre/lib/management/jmxremote.password
# Password example: monitorRole=pass controlRole=pass
# default permissions: /opt/atlassian/jira/jre/lib/management/jmxremote.access
# custom location can be set as follows: -Dcom.sun.management.jmxremote.password.file=/opt/atlassian/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/opt/atlassian/jmxremote.access
# Flight recorder. FYI OpenJDK does not have commercial features or Flight recorder. These are part of the Oracle JDK only.
-XX:+UnlockCommercialFeatures # under Oracle license 
-XX:+FlightRecorder -XX:FlightRecorderOptions=defaultrecording=true
### JMX END ###

# timeouts
-Dhttp.socketTimeout=<YOUR_NEW_TIMEOUT_IN_MILLISECONDS>
-Dhttp.connection.timeout=<YOUR_NEW_TIMEOUT_IN_MILLISECONDS>

# String deduplication. Works for G1 only
-XX:+UseG1GC -XX:+UseStringDeduplication -XX:+PrintStringDeduplicationStatistics

# The following example JVM settings are recommended for most production engine tier servers: https://docs.oracle.com/cd/E40972_01/doc.70/e40973/cnf_jvmgc.htm#autoId2
-Xms24G -Xmx24G -XX:PermSize=512m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5 -XX:InitiatingHeapOccupancyPercent=70
# -XX:MaxGCPauseMillis: Sets a target for the maximum GC pause time. This is a soft goal, and the JVM will make its best effort to achieve it.
# -XX:ParallelGCThreads: Sets the number of threads used during parallel phases of the garbage collectors. The default value varies with the platform on which the JVM is running.
# -XX:ConcGCThreads: Number of threads concurrent garbage collectors will use. The default value varies with the platform on which the JVM is running.
# -XX:InitiatingHeapOccupancyPercent: Percentage of the (entire) heap occupancy to start a concurrent GC cycle. GCs that trigger a concurrent GC cycle based on the occupancy of the entire heap and not just one of the generations, including G1, use this option. A value of 0 denotes 'do constant GC cycles'. The default value is 45.

# for Jira
-XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=70 -XX:+ExplicitGCInvokesConcurrent -XX:MaxGCPauseMillis=200
